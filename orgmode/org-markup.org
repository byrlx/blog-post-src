#+OPTIONS: toc:t H:3
#+AUTHOR: Luis Xu
#+EMAIL: xuzhengchaojob@gmail.com
#+DATE: <2015-12-14 Thu 23:25>

#+TITLE: Orgmode手册6:富文本标记(导出前准备)

org mode另一个牛X闪闪的功能就是导出功能, 
可以将org文件导出为计算机领域主流的文件格式, 例如HTML/PDF/LaTex/Markdown等等, 
为了支持这些文本丰富的格式要求, org mode定义了一系列的标记, \\
这篇文章就先来看一下这些标记规则.
* 结构化标记元素
** 标题.
  使用关键字 *#+TITLE* 来设置导出文本的标题, 如果没有设置, 会以文件名
  作为标题. 如果只是到处一个子树, 则使用子树的标题作为导出文本的标题.
  或者也可以在子树中设置属性 *EXPORT_TITLE*.
** 修改导出层级.
  org mode默认只导出三层标题, 举例来说, 导出为HTML时, 只会导出到H3, 而
  四层及以下的标题都生成为列表. 如果想要修改导出的层级, 可以设置全局变量
  *org-export-headline-levels*, 或者在文本内设置OPTIONS设置 *H* 配置: 
  #+BEGIN_EXAMPLE 
  #+END_EXAMPLE
** 目录.
  org mode默认会导出目录, 将其放在第一个标题的前面,目录深度与标题层级相同,
  不过可以通过设置 *org-export-with-toc* 或修改OPTIONS的 *toc* 来修改目录
  深度或将其关闭. 例如
  #+BEGIN_EXAMPLE
  #+END_EXAMPLE
  
  如果想改变目录的导出位置, 先将默认导出关闭, 然后使用 *#+TOC: headlines N*
  配置到想插入的地方. 例如:
  #+BEGIN_EXAMPLE
    ...
    #+TOC: headlines 2        (insert TOC here, with two headline levels)
  #+END_EXAMPLE
  
  同时, org mode还支持列表和表格的导出.
  #+BEGIN_EXAMPLE 
    #+TOC: listings           (build a list of listings)
    #+TOC: tables             (build a list of tables)
  #+END_EXAMPLE
** 换行, 引用
orgmode中,段落之间用空白行来分割,如果需要段落内换行, 在该行结尾使用 *\\* 关键字.

如果想在该段落部分内容保持换行, 可以使用 =#+BEGIN_VERSE= 关键字, 写诗的人肯定需要这个功能, 
例如:
#+BEGIN_EXAMPLE
#+BEGIN_VERSE
      Great clouds overhead
      Tiny black birds rise and fall
      Snow covers Emacs

          -- AlexSchroeder
#+END_VERSE
#+END_EXAMPLE

引用他人内容可以使用 =#+BEGIN_QUOTE=, 这样可以保持缩进
#+BEGIN_EXAMPLE
#+BEGIN_QUOTE
     Everything should be made as simple as possible,
     but not any simpler -- Albert Einstein
#+END_QUOTE
#+END_EXAMPLE

想要内容居中可以使用 =#+BEGIN_CENTER=
#+BEGIN_EXAMPLE
#+BEGIN_CENTER
Keep me in the center!!!!
#+END_CENTER
#+END_EXAMPLE

** 修饰符
org mode提供了一些字符串的修饰符号, 这些修饰符都是成对出现, 
用于修饰其包含的内容.\\
包括以下几种:
#+BEGIN_EXAMPLE
*粗体*, /斜体/, _下划线_, =原文=, ~代码~, +删除线+. 
#+END_EXAMPLE


如果一行只包含且包含5个以上 "-" 那么会被导出为横线.
** 注释
注释可以用三中方式表示, 注释永远不会被导出.
+ 以零个或多个空格开始, 并跟着#号, 然后后面在接一个空格的行被认为是
  注释行, 该行永远不会被导出. 
+ 以 *COMMENT* 开始的整个子树
+ 被 =#+BEGIN_COMMENT= 和 =#+END_COMMENT= 包裹的内容.

下面是示例, 下面的内容不会被导出
#+BEGIN_EXAMPLE
  # 注释

  * COMMENT 注释子树
  ** 二级目录

  #+BEGIN_COMMENT
   test
  #+END_COMMENT
#+END_EXAMPLE
* "字面"内容
Orgmode提供了几种方式, 可以使位子内容不受org mode的处理, 即使文字中
有org mode的特殊字符, 主要的方式包括:
+ #+BEGIN_EXAMPLE..#+END_EXAMPLE \\
  例如:
  #+BEGIN_EXAMPLE 
  #+BEGIN_EXAMPLE 
  This is an example, *nothing works* 
  `#+END_EXAMPLE 
  #+END_EXAMPLE 
  如果内容特别短, 也可以使用"空格:空格"字符串修饰
+ #+BEGIN_EXAMPLE..#+END_EXAMPLE \\
  如果示例是一段程序, 可以使用这对关键字, 例如
  #+BEGIN_EXAMPLE  -r -n
    ,#+BEGIN_EXAMPLE elisp
    (+ 1 1)
    (concat "helo" "wold") (ref:lxxtest)
    ,#+END_EXAMPLE
  #+END_EXAMPLE

上面两种方式都可以添加一些配置:
+ "-n/+n" 显示行号, "+n"会接着前面的block行号继续.
+ (ref:name) 定义block内的引用.可以在block之外引用block里面的内容.
  例如可以使用[[(lxxtest)][代码块链接]]来引用代码内容.
+ "-r", 在导出的文件中移除引用.

可以使用快捷键 "C-c '"打开一个buffer编辑block中的内容.
* 引用其他文件
使用 *#+INCLUDE:* 来在org文件中引用其他文件, 被引用文件的内容会被放在当前
部分 如果被引用文件也有标题的话, 这些标题会被设置为当前章节的子标题. 
如果你想修改这种设置, 修改被引用文件的标题级别, 可以通过设置 minlevel参数.
#+BEGIN_EXAMPLE
 #+INCLUDE: file :minlevel N
#+END_EXAMPLE

也可以通过 *:lines* 来引用该文件的一部分, 例如:
#+BEGIN_EXAMPLE
 #+INCLUDE: file :minlevel N :lines "5-10" ;; 5到10行
 #+INCLUDE: file :minlevel N :lines "5-" ;; 5到结尾
 #+INCLUDE: file :minlevel N :lines "-10" ;; 1到9行
#+END_EXAMPLE

也可以通过在后面使用 *src language* 或 *example* 来将被引用内容转化为
src或example结构. 

* 宏
#+BEGIN_CENTER
MACRO is everywhere.
#+END_CENTER

orgmode同样支持宏定义, 使用关键字 *#+MACRO name body* 来定义你自己的宏, 然后以
*{% raw %}{{{}}}{% endraw %}* 的方式调用宏, 可以在宏定义中使用 "$N" 定义多个参数. 

#+BEGIN_EXAMPLE
#+MACRO: awesome Hi, $, you are an awesome guy.

{% raw %}{{{awesome(Jake Wharton)}}}{% endraw %}
#+END_EXAMPLE
系统也提供了一些预定义的宏, 同样可以调用, 例如 ={% raw %}{{{title}}}{% endraw %}= , ={% raw %}{{{author}}}{% endraw %}= ,
={% raw %}{{{time(FORMAT)}}}{% endraw %}= 等.
* LaTex
As i never use LaTex, I dont read this part. \\
It will be catched up when I have some experience with LaTex someday.
