#+OPTIONS: toc:t H:3
#+AUTHOR: Zhengchao Xu
#+EMAIL: xuzhengchaojob@gmail.com

#+TITLE: Elisp 文本处理函数
Emacs Lisp提供了一个文本的框架, 通过该框架可以实现对buffer内容的
各种处理: 移动光标, 插入文本, 删除文本, 保存等等. 
本文就简单介绍这些基础的函数.

* 光标位置函数
** (point)
该函数返回一个整数, 表示当前光标的位置, buffer中的第一个char的位置
为1.  *每一行的换行也算一个字符*
** (region-beginning) (region-end)
当前区块的开始和结束位置
** (line-beginning-position) (line-end-position)
当前行的开始和结束位置.
* 光标移动函数
** (goto-char)
接受一个整数参数N, 移动光标到N. 如果N大于buffer的长度, 移动到buffer尾部.
** (forward-char) (backwar-char)
接受参数N, 前移/后移光标N个字符.
** (search-forward) (search-backward)
接受一个字符串参数, 向前/向后寻找参数, 并将光标置于结果尾部.
** (re-search-forward) (re-search-backward)
接受正则表达式, 依次查找符合条件的结果.
** (skip-chars-forward) (skip-chars-backward)
   向前/向后跳到第一个非参数字符串的字符, 返回跳的距离.
#+BEGIN_EXAMPLE
;;跳到第一个非小写字符的字符.光标定位到该字符后面.
(skip-chars-forward "a-z") 
#+END_EXAMPLE
* 文本操作函数
** (delete-char)
接受整数N, 删除当前光标开始的N个字符.
** (delete-region)
接受两个整数S, N. 删除S位置到N位置之间的字符.
即删除字符[S N), 第N个字符并不删除.
** (insert)
接受字符串参数, 插入到当前光标后面.
** (buffer-substring)*
接受两个位置参数, 返回 *带属性* 的文本内容. 
如果不要属性, 使用 (buffer-substring-no-properties)
** (capitalize-region)
接受开始和结束位置N, 将该区域的第一个字母大写, 其余字
* 缓冲区相关函数
** (buffer-name)(buffer-file-name)
前者返回当前缓冲区, 返回类型为buffer类型.
后者返回字符串, 为当前buffer关联的文件名, 如无文件名则返回nil.

** (set-buffer)
接受一个字符串参数, 将当前buffer设置为参数名代表的buffer.

    
** (save-buffer)
保存当前buffer
** (kill-buffer)
干掉参数所代表的buffer name.
干掉当前buffer使用(kill-this-buffer)函数.
* 文件相关操作
** (find-file)
接受文件名参数, 会创建一个buffer并将文件加载进去.
** (write-file)
接受文件名参数, 将当前buffer的内容写入文件.
** (insert-file-contents)
接受文件名参数, 将文件内容插入到当前位置
** (append-to-file)
接受三个参数:开始位置,结束位置,文件路径.
将当前buffer的开始位置到结束位置区域内容写入文件.
** (rename-file) (copy-file) (delete-file)
函数功能函数名基本已解释清楚.
** (file-name-directory) (file-name-extension)
功能如其名.
